# Generated by Django 2.2.11 on 2020-03-24 07:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('cms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='プロジェクト名')),
                ('twitter', models.CharField(blank=True, max_length=50, verbose_name='Twitter')),
                ('github', models.CharField(blank=True, max_length=50, verbose_name='GitHub')),
                ('product_url', models.URLField(help_text='必須。まだ完成していない場合ピッチ資料のGoogle Driveリンクなどを与えること。', verbose_name='プロダクトURL')),
                ('description', models.TextField(help_text='必須。140字以内。', max_length=280, verbose_name='プロダクト説明')),
                ('state', models.CharField(choices=[('0', 'Dead'), ('1', 'Idea'), ('2', 'Prototyping'), ('3', 'Launched'), ('4', 'User-acquired')], default='1', max_length=2, verbose_name='プロジェクトのレベル')),
                ('does_accept_application', models.BooleanField(default=False, verbose_name='メンバーを募集しているかどうか')),
                ('application', models.TextField(blank=True, verbose_name='応募方法')),
                ('is_public', models.BooleanField(default=True, verbose_name='公開可能かどうか')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='プロジェクト作成日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='プロジェクト更新日')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='タグ')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectUserRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='プラン内容')),
                ('date', models.DateField(verbose_name='プラン期日')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cms.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='ログタイトル')),
                ('text', models.TextField(verbose_name='ログ内容')),
                ('achievement', models.PositiveSmallIntegerField(help_text='必須。10段階で達成度を評価してください。', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='達成度')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='ログ作成日')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cms.Project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='members',
            field=models.ManyToManyField(through='cms.ProjectUserRelation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='tag',
            field=models.ManyToManyField(to='cms.Tag'),
        ),
    ]
